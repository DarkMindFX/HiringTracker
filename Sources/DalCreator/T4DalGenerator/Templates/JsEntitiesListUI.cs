// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace T4DalGenerator.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class JsEntitiesListUI : JsEntitiesListUIBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            
            #line 11 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
 
    var pks = generator.GetPKColumns(table); 
    var fks = generator.GetFKColumns(table).Select( c =>  c.FKRefTable ).Distinct();
    var entityPlural = modelHelper.Pluralize(table.Name);

            
            #line default
            #line hidden
            this.Write(@"

import React from ""react"";
import { Link, withRouter } from 'react-router-dom'
import { DataGrid } from '@material-ui/data-grid';
import Alert from '@material-ui/lab/Alert';
import { Button } from '@material-ui/core';
import constants from ""../constants"";

const PageHelper = require(""../helpers/PageHelper"");
const ");
            
            #line 26 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write("Dal = require(\'../dal/");
            
            #line 26 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write("Dal\');\r\n");
            
            #line 27 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
 
foreach(var fk in fks) 
{
    if(!fk.Equals(table.Name)) {

            
            #line default
            #line hidden
            this.Write("\r\nconst ");
            
            #line 33 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write("Dal = require(\'../dal/");
            
            #line 33 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write("Dal\');\r\n");
            
            #line 34 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

    }
}

            
            #line default
            #line hidden
            this.Write("\r\n\r\nclass ");
            
            #line 40 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write(@"Page extends React.Component {

    _columns = null;
    _pageHelper = null;

    constructor(props) {
        super(props);

        this._pageHelper = new PageHelper(this.props);
        let rooPath = ''; // set the page hierarchy here

        this.state = { 
            ");
            
            #line 52 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural.ToLower()));
            
            #line default
            #line hidden
            this.Write(": [],\r\n            showError: false,\r\n            error: null,\r\n            urlTh" +
                    "is: `${rooPath}/");
            
            #line 55 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural.ToLower()));
            
            #line default
            #line hidden
            this.Write("`,\r\n            urlNewEntity: `${rooPath}/");
            
            #line 56 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("/new`,\r\n            urlEditEntity: `${rooPath}/");
            
            #line 57 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("/edit/`,\r\n        };\r\n        this._initColumns();\r\n       \r\n");
            
            #line 61 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
 
foreach(var fk in fks) 
{

            
            #line default
            #line hidden
            this.Write("        this._get");
            
            #line 65 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write(" = this._get");
            
            #line 65 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write(".bind(this);\r\n");
            
            #line 66 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

}

            
            #line default
            #line hidden
            this.Write("        this._get");
            
            #line 69 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write(" = this._get");
            
            #line 69 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write(@".bind(this);
        this._redirectToLogin = this._redirectToLogin.bind(this);

        this.onRowClick = this.onRowClick.bind(this);
    }

    onRowClick(event) {
        const row = event.row;
        if(row) {
            this.props.history.push(this.state.urlEditEntity + row.id);
        }

    }

    componentDidMount() {
        const token = localStorage.getItem(constants.SESSION_TOKEN_KEY);
        console.log('Token: ', token);
        if(token != null) {
            let obj = this;
");
            
            #line 88 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

var promisesDals = string.Empty;
foreach(var fk in fks)
{
    if(!fk.Equals(table.Name)) {
        promisesDals += "\t\t\tobj._get" + modelHelper.Pluralize(fk) +  "().then( () => {\r\n";
    }
}

promisesDals += "\t\t\tobj._get" + modelHelper.Pluralize(table.Name) + "().then( () => {} );\r\n\t\t\t";

foreach(var fk in fks)
{
    if(!fk.Equals(table.Name)) {
        promisesDals += "});";
    }
}


            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 107 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(promisesDals));
            
            #line default
            #line hidden
            this.Write(@"
        }
        else {
            console.log('No token - need to login')
            this._redirectToLogin();           
        }
    }

    render() {
        let records = this._getRecords();

        const styleError = {
            display: this.state.showError ? ""block"" : ""none""
        }

        return (
            <div style={{ height: 500, width: '100%' }}>
                <h3>");
            
            #line 124 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write(@"</h3>                
                <Alert severity=""error"" style={styleError}>Error: {this.state.error}</Alert>
                <DataGrid columns={this._columns} rows={records}  onRowClick={ this.onRowClick }/>
                <Button variant=""contained"" component={Link} color=""primary"" size=""small"" to={this.state.urlNewEntity} >+ ");
            
            #line 127 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("</Button>        \r\n            </div>\r\n        );\r\n    }\r\n\r\n    _initColumns() {\r" +
                    "\n        this._columns = [\r\n");
            
            #line 134 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

foreach(var c in table.Columns)
{

            
            #line default
            #line hidden
            this.Write("                { field: \'");
            
            #line 138 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write("\', headerName: \'");
            
            #line 138 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write("\', width: 250 },\r\n");
            
            #line 139 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

}

            
            #line default
            #line hidden
            this.Write("       \r\n        ]        \r\n    }\r\n\r\n    _getRecords() {\r\n        let records = [" +
                    "];\r\n\r\n        let cs = Object.values(this.state.");
            
            #line 148 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural.ToLower()));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n        for(let c in cs) {\r\n\r\n            let r = {\r\n                id: cs" +
                    "[c].ID,\r\n");
            
            #line 154 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

foreach(var c in table.Columns)
{
    if(string.IsNullOrEmpty(c.FKRefTable))
    {

            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 160 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(": cs[c].");
            
            #line 160 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 161 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

    }
    else 
    {

            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 166 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(": cs[c].");
            
            #line 166 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" ? this.state.");
            
            #line 166 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(c.FKRefTable).ToLower()));
            
            #line default
            #line hidden
            this.Write("[ cs[c].");
            
            #line 166 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" ].Name : \"\",\r\n");
            
            #line 167 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

    }
}

            
            #line default
            #line hidden
            this.Write("\r\n            };\r\n\r\n            records.push(r);\r\n        }\r\n\r\n        return rec" +
                    "ords;\r\n    }\r\n\r\n");
            
            #line 180 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
 
foreach(var fk in fks) 
{

            
            #line default
            #line hidden
            this.Write("    async _get");
            
            #line 184 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write("() {\r\n        let updatedState = this.state;\r\n        updatedState.");
            
            #line 186 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk).ToLower()));
            
            #line default
            #line hidden
            this.Write(" = {};\r\n        let dal");
            
            #line 187 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 187 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write("Dal();\r\n        let response = await dal");
            
            #line 188 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write(".get");
            
            #line 188 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk)));
            
            #line default
            #line hidden
            this.Write("();\r\n\r\n        if(response.status == constants.HTTP_OK)\r\n        {\r\n            f" +
                    "or(let s in response.data)\r\n            {\r\n                updatedState.");
            
            #line 194 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(fk).ToLower()));
            
            #line default
            #line hidden
            this.Write(@"[response.data[s].ID] = response.data[s];             
            }
        }
        else if(response.status == constants.HTTP_Unauthorized) {
            this._redirectToLogin();            
        }
        else {
            this._showError(updatedState, response);                        
        }

        this.setState(updatedState);
    }
");
            
            #line 206 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

}

            
            #line default
            #line hidden
            this.Write("    \r\n\r\n    async _get");
            
            #line 210 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write("() {\r\n        let updatedState = this.state;\r\n        updatedState.");
            
            #line 212 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural.ToLower()));
            
            #line default
            #line hidden
            this.Write(" = {};\r\n        let dal");
            
            #line 213 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 213 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write("Dal();\r\n        let response = await dal");
            
            #line 214 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write(".get");
            
            #line 214 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write("();\r\n\r\n        if(response.status == constants.HTTP_OK)\r\n        {\r\n            f" +
                    "or(let s in response.data)\r\n            {\r\n                updatedState.");
            
            #line 220 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural.ToLower()));
            
            #line default
            #line hidden
            this.Write(@"[response.data[s].ID] = response.data[s];             
            }
        }
        else if(response.status == constants.HTTP_Unauthorized) {
            this._redirectToLogin();            
        }
        else {
            this._showError(updatedState, response);                        
        }

        this.setState(updatedState);
    }

    _showError(updatedState, response) {
        var error = JSON.parse(response.data.response);
        updatedState.showError = true;
        updatedState.error = error.Message;
    }

    _redirectToLogin()
    {        
        this._pageHelper.redirectToLogin(this.state.urlThis);  
    }
}

export default withRouter(");
            
            #line 245 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityPlural));
            
            #line default
            #line hidden
            this.Write("Page);");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\JsEntitiesListUI.tt"

private global::DataModel.DataTable _tableField;

/// <summary>
/// Access the table parameter of the template.
/// </summary>
private global::DataModel.DataTable table
{
    get
    {
        return this._tableField;
    }
}

private global::T4DalGenerator.ModelHelper _modelHelperField;

/// <summary>
/// Access the modelHelper parameter of the template.
/// </summary>
private global::T4DalGenerator.ModelHelper modelHelper
{
    get
    {
        return this._modelHelperField;
    }
}

private global::T4DalGenerator.Generators.GeneratorBase _generatorField;

/// <summary>
/// Access the generator parameter of the template.
/// </summary>
private global::T4DalGenerator.Generators.GeneratorBase generator
{
    get
    {
        return this._generatorField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool tableValueAcquired = false;
if (this.Session.ContainsKey("table"))
{
    this._tableField = ((global::DataModel.DataTable)(this.Session["table"]));
    tableValueAcquired = true;
}
if ((tableValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("table");
    if ((data != null))
    {
        this._tableField = ((global::DataModel.DataTable)(data));
    }
}
bool modelHelperValueAcquired = false;
if (this.Session.ContainsKey("modelHelper"))
{
    this._modelHelperField = ((global::T4DalGenerator.ModelHelper)(this.Session["modelHelper"]));
    modelHelperValueAcquired = true;
}
if ((modelHelperValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("modelHelper");
    if ((data != null))
    {
        this._modelHelperField = ((global::T4DalGenerator.ModelHelper)(data));
    }
}
bool generatorValueAcquired = false;
if (this.Session.ContainsKey("generator"))
{
    this._generatorField = ((global::T4DalGenerator.Generators.GeneratorBase)(this.Session["generator"]));
    generatorValueAcquired = true;
}
if ((generatorValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("generator");
    if ((data != null))
    {
        this._generatorField = ((global::T4DalGenerator.Generators.GeneratorBase)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class JsEntitiesListUIBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}

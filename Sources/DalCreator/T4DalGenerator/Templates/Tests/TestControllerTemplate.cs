// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace T4DalGenerator.Templates.Tests
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TestControllerTemplate : TestControllerTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\nusing PPT.DTO;\r\nusing PPT.Utils.Convertors;\r\nusing PhotoPrint.Test.E2E.API;\r\nus" +
                    "ing Microsoft.AspNetCore.Mvc.Testing;\r\nusing System;\r\nusing System.Collections.G" +
                    "eneric;\r\nusing System.Net.Http.Headers;\r\nusing System.Net;\r\nusing Xunit; \r\n");
            
            #line 23 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

		var pks = generator.GetPKColumns(table);

            
            #line default
            #line hidden
            this.Write("\r\nnamespace Test.E2E.PhotoPrint.API.Controllers.V1\r\n{\r\n    public class Test");
            
            #line 29 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name)));
            
            #line default
            #line hidden
            this.Write("Controller : E2ETestBase, IClassFixture<WebApplicationFactory<PPT.PhotoPrint.API." +
                    "Startup>>\r\n    {\r\n        public Test");
            
            #line 31 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name)));
            
            #line default
            #line hidden
            this.Write("Controller(WebApplicationFactory<PPT.PhotoPrint.API.Startup> factory) : base(fact" +
                    "ory)\r\n        {\r\n            _testParams = GetTestParams(\"GenericControllerTestS" +
                    "ettings\");\r\n        }\r\n\r\n        [Fact]\r\n        public void ");
            
            #line 37 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"_GetAll_Success()
        {
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);

                var respGetAll = client.GetAsync($""/api/v1/");
            
            #line 45 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n                Assert.Equal(HttpStatusCode.OK, respGetAll.Result.StatusCo" +
                    "de);\r\n\r\n                IList<");
            
            #line 49 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("> dtos = ExtractContentJson<List<");
            
            #line 49 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(">>(respGetAll.Result.Content);\r\n\r\n                Assert.NotEmpty(dtos);\r\n       " +
                    "     }\r\n        }\r\n\r\n        [Fact]\r\n        public void ");
            
            #line 56 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("_Get_Success()\r\n        {\r\n            PPT.Interfaces.Entities.");
            
            #line 58 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@" testEntity = AddTestEntity();
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);
                try
                {
");
            
            #line 66 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            string keys = string.Empty;
            for(int i = 0; i < pks.Count; ++i)
            {
                keys += "{param" + pks[i].Name + "}" + (i+1 < pks.Count ? "/" : string.Empty);

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 72 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = testEntity.");
            
            #line 72 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 73 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("                    var respGet = client.GetAsync($\"/api/v1/");
            
            #line 76 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 76 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keys));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n                    Assert.Equal(HttpStatusCode.OK, respGet.Result.StatusC" +
                    "ode);\r\n\r\n                    ");
            
            #line 80 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" dto = ExtractContentJson<");
            
            #line 80 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@">(respGet.Result.Content);

                    Assert.NotNull(dto);
                    Assert.NotNull(dto.Links);
                }
                finally
                {
                    RemoveTestEntity(testEntity);
                }
            }
        }

        [Fact]
        public void ");
            
            #line 93 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"_Get_InvalidID()
        {
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);
");
            
            #line 100 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            keys = string.Empty;
            for(int i = 0; i < pks.Count; ++i)
            {
                keys += "{param" + pks[i].Name + "}" + (i+1 < pks.Count ? "/" : string.Empty);

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 106 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue;\r\n");
            
            #line 107 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("\r\n                var respGet = client.GetAsync($\"/api/v1/");
            
            #line 111 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 111 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keys));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n                Assert.Equal(HttpStatusCode.NotFound, respGet.Result.Statu" +
                    "sCode);\r\n            }\r\n        }\r\n\r\n        [Fact]\r\n        public void ");
            
            #line 118 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"_Delete_Success()
        {
            var testEntity = AddTestEntity();
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);
                try
                {
");
            
            #line 128 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            keys = string.Empty;
            for(int i = 0; i < pks.Count; ++i)
            {
                keys += "{param" + pks[i].Name + "}" + (i+1 < pks.Count ? "/" : string.Empty);

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 134 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = testEntity.");
            
            #line 134 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 135 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("\r\n                    var respDel = client.DeleteAsync($\"/api/v1/");
            
            #line 139 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 139 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keys));
            
            #line default
            #line hidden
            this.Write(@""");

                    Assert.Equal(HttpStatusCode.OK, respDel.Result.StatusCode);
                }
                finally
                {
                    RemoveTestEntity(testEntity);
                }
            }
        }

        [Fact]
        public void ");
            
            #line 151 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"_Delete_InvalidID()
        {
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);
");
            
            #line 158 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            keys = string.Empty;
            for(int i = 0; i < pks.Count; ++i)
            {
                keys += "{param" + pks[i].Name + "}" + (i+1 < pks.Count ? "/" : string.Empty);

            
            #line default
            #line hidden
            this.Write("                var param");
            
            #line 164 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue;\r\n");
            
            #line 165 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("\r\n                var respDel = client.DeleteAsync($\"/api/v1/");
            
            #line 169 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 169 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(keys));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n                Assert.Equal(HttpStatusCode.NotFound, respDel.Result.Statu" +
                    "sCode);\r\n            }\r\n        }\r\n\r\n        [Fact]\r\n        public void ");
            
            #line 176 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"_Insert_Success()
        {
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);

                PPT.Interfaces.Entities.");
            
            #line 184 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = CreateTestEntity();\r\n                PPT.Interfaces.Entities.");
            
            #line 185 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" respEntity = null;\r\n                try\r\n                {\r\n                    " +
                    "var reqDto = ");
            
            #line 188 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.Convert(testEntity, null);\r\n\r\n                    var content = CreateC" +
                    "ontentJson(reqDto);\r\n\r\n                    var respInsert = client.PostAsync($\"/" +
                    "api/v1/");
            
            #line 192 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/\", content);\r\n\r\n                    Assert.Equal(HttpStatusCode.Created, respIns" +
                    "ert.Result.StatusCode);\r\n\r\n                    ");
            
            #line 196 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" respDto = ExtractContentJson<");
            
            #line 196 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(">(respInsert.Result.Content);\r\n\r\n                ");
            
            #line 198 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                foreach(var c in table.Columns)
                {
                    if(c.IsPK) {
                
            
            #line default
            #line hidden
            this.Write("                    Assert.NotNull(respDto.");
            
            #line 203 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                ");
            
            #line 204 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                    }
                    else {
                
            
            #line default
            #line hidden
            this.Write("                    Assert.Equal(reqDto.");
            
            #line 208 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(", respDto.");
            
            #line 208 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                ");
            
            #line 209 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                    }
                }
                
            
            #line default
            #line hidden
            this.Write("\r\n                    respEntity = ");
            
            #line 214 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.Convert(respDto);\r\n                }\r\n                finally\r\n        " +
                    "        {\r\n                    RemoveTestEntity(respEntity);\r\n                }\r" +
                    "\n            }\r\n        }\r\n\r\n        [Fact]\r\n        public void ");
            
            #line 224 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"_Update_Success()
        {
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);

                PPT.Interfaces.Entities.");
            
            #line 232 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = AddTestEntity();\r\n                try\r\n                {\r\n         " +
                    "   ");
            
            #line 235 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = generator.GetColumnType(c);
                    if(!c.IsIdentity && !c.IsPK && testValsUpdateAfter.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 244 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 244 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 245 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 250 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 250 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 251 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 256 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 256 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 257 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(testValsUpdateAfter[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 262 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 262 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 263 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                    }                    
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n                    var reqDto = ");
            
            #line 269 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.Convert(testEntity, null);\r\n\r\n                    var content = CreateC" +
                    "ontentJson(reqDto);\r\n\r\n                    var respUpdate = client.PutAsync($\"/a" +
                    "pi/v1/");
            
            #line 273 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/\", content);\r\n\r\n                    Assert.Equal(HttpStatusCode.OK, respUpdate.R" +
                    "esult.StatusCode);\r\n\r\n                    ");
            
            #line 277 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" respDto = ExtractContentJson<");
            
            #line 277 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(">(respUpdate.Result.Content);\r\n\r\n                 ");
            
            #line 279 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                foreach(var c in table.Columns)
                {
                    if(c.IsPK) {
                
            
            #line default
            #line hidden
            this.Write("                    Assert.NotNull(respDto.");
            
            #line 284 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                ");
            
            #line 285 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                    }
                    else {
                
            
            #line default
            #line hidden
            this.Write("                    Assert.Equal(reqDto.");
            
            #line 289 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(", respDto.");
            
            #line 289 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                ");
            
            #line 290 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                    }
                }
                
            
            #line default
            #line hidden
            this.Write("\r\n                }\r\n                finally\r\n                {\r\n                " +
                    "    RemoveTestEntity(testEntity);\r\n                }\r\n            }\r\n        }\r\n" +
                    "\r\n        [Fact]\r\n        public void ");
            
            #line 304 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"_Update_InvalidID()
        {
            using (var client = _factory.CreateClient())
            {
                var respLogin = Login((string)_testParams.Settings[""test_user_login""], (string)_testParams.Settings[""test_user_pwd""]);

                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Bearer"", respLogin.Token);

                PPT.Interfaces.Entities.");
            
            #line 312 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" testEntity = CreateTestEntity();\r\n                try\r\n                {\r\n      " +
                    "        ");
            
            #line 315 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = generator.GetColumnType(c);
                    if(!c.IsIdentity && testValsUpdateAfter.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 324 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 324 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 325 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 330 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 330 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 331 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 336 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 336 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 337 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(testValsUpdateAfter[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              testEntity.");
            
            #line 342 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 342 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsUpdateAfter[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 343 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                    }
                    else if(c.IsPK)
                    {
               
            
            #line default
            #line hidden
            this.Write("               testEntity.");
            
            #line 349 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = Int64.MaxValue;\r\n               ");
            
            #line 350 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n                    var reqDto = ");
            
            #line 355 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Convertor.Convert(testEntity, null);\r\n\r\n                    var content = CreateC" +
                    "ontentJson(reqDto);\r\n\r\n                    var respUpdate = client.PutAsync($\"/a" +
                    "pi/v1/");
            
            #line 359 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write(@"/"", content);

                    Assert.Equal(HttpStatusCode.NotFound, respUpdate.Result.StatusCode);
                }
                finally
                {
                    RemoveTestEntity(testEntity);
                }
            }
        }

        #region Support methods

        protected bool RemoveTestEntity(PPT.Interfaces.Entities.");
            
            #line 372 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" entity)\r\n        {\r\n            if (entity != null)\r\n            {\r\n            " +
                    "    var dal = CreateDal();\r\n\r\n                return dal.Delete(\r\n              " +
                    "  ");
            
            #line 379 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                    for(int i = 0; i < pks.Count; ++i)
                    {
                
            
            #line default
            #line hidden
            this.Write("                        entity.");
            
            #line 383 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pks[i].Name));
            
            #line default
            #line hidden
            
            #line 383 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1 < pks.Count ? "," : string.Empty));
            
            #line default
            #line hidden
            this.Write("\r\n                ");
            
            #line 384 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                    }
                
            
            #line default
            #line hidden
            this.Write(");\r\n            }\r\n            else\r\n            {\r\n                return false;" +
                    "\r\n            }\r\n        }\r\n\r\n        protected PPT.Interfaces.Entities.");
            
            #line 394 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" CreateTestEntity()\r\n        {\r\n            var entity = new PPT.Interfaces.Entit" +
                    "ies.");
            
            #line 396 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n            ");
            
            #line 397 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                foreach(var c in table.Columns)
                {
                    Type columnType = generator.GetColumnType(c);
                    if(!c.IsIdentity && testValsInsert.ContainsKey(c.Name))
                    {
                        if(columnType == typeof(DateTime))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 406 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = DateTime.Parse(\"");
            
            #line 406 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\");\r\n              ");
            
            #line 407 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(columnType == typeof(string))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 412 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 412 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write("\";\r\n              ");
            
            #line 413 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(columnType == typeof(bool))
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 418 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 418 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(";              \r\n              ");
            
            #line 419 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                        else if(testValsInsert[c.Name] != null)
                        {
              
            
            #line default
            #line hidden
            this.Write("              entity.");
            
            #line 424 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 424 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(testValsInsert[c.Name].ToString()));
            
            #line default
            #line hidden
            this.Write(";\r\n              ");
            
            #line 425 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

                        }
                    }
                }
            
            
            #line default
            #line hidden
            this.Write("\r\n            return entity;\r\n        }\r\n\r\n        protected PPT.Interfaces.Entit" +
                    "ies.");
            
            #line 434 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" AddTestEntity()\r\n        {\r\n            PPT.Interfaces.Entities.");
            
            #line 436 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" result = null;\r\n\r\n            var entity = CreateTestEntity();\r\n\r\n            va" +
                    "r dal = CreateDal();\r\n            result = dal.Insert(entity);\r\n\r\n            re" +
                    "turn result;\r\n        }\r\n\r\n        private PPT.Interfaces.I");
            
            #line 446 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal CreateDal()\r\n        {\r\n            var initParams = GetTestParams(\"DALInitPa" +
                    "rams\");\r\n\r\n            PPT.Interfaces.I");
            
            #line 450 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("Dal dal = new PPT.DAL.MSSQL.");
            
            #line 450 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@"Dal();
            var dalInitParams = dal.CreateInitParams();
            dalInitParams.Parameters[""ConnectionString""] = (string)initParams.Settings[""ConnectionString""];
            dal.Init(dalInitParams);

            return dal;
        }
        #endregion
    }
}
");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\TestControllerTemplate.tt"

private global::DataModel.DataTable _tableField;

/// <summary>
/// Access the table parameter of the template.
/// </summary>
private global::DataModel.DataTable table
{
    get
    {
        return this._tableField;
    }
}

private global::T4DalGenerator.ModelHelper _modelHelperField;

/// <summary>
/// Access the modelHelper parameter of the template.
/// </summary>
private global::T4DalGenerator.ModelHelper modelHelper
{
    get
    {
        return this._modelHelperField;
    }
}

private global::T4DalGenerator.Generators.GeneratorBase _generatorField;

/// <summary>
/// Access the generator parameter of the template.
/// </summary>
private global::T4DalGenerator.Generators.GeneratorBase generator
{
    get
    {
        return this._generatorField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsGetField;

/// <summary>
/// Access the testValsGet parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsGet
{
    get
    {
        return this._testValsGetField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsInsertField;

/// <summary>
/// Access the testValsInsert parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsInsert
{
    get
    {
        return this._testValsInsertField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsUpdateAfterField;

/// <summary>
/// Access the testValsUpdateAfter parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsUpdateAfter
{
    get
    {
        return this._testValsUpdateAfterField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool tableValueAcquired = false;
if (this.Session.ContainsKey("table"))
{
    this._tableField = ((global::DataModel.DataTable)(this.Session["table"]));
    tableValueAcquired = true;
}
if ((tableValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("table");
    if ((data != null))
    {
        this._tableField = ((global::DataModel.DataTable)(data));
    }
}
bool modelHelperValueAcquired = false;
if (this.Session.ContainsKey("modelHelper"))
{
    this._modelHelperField = ((global::T4DalGenerator.ModelHelper)(this.Session["modelHelper"]));
    modelHelperValueAcquired = true;
}
if ((modelHelperValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("modelHelper");
    if ((data != null))
    {
        this._modelHelperField = ((global::T4DalGenerator.ModelHelper)(data));
    }
}
bool generatorValueAcquired = false;
if (this.Session.ContainsKey("generator"))
{
    this._generatorField = ((global::T4DalGenerator.Generators.GeneratorBase)(this.Session["generator"]));
    generatorValueAcquired = true;
}
if ((generatorValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("generator");
    if ((data != null))
    {
        this._generatorField = ((global::T4DalGenerator.Generators.GeneratorBase)(data));
    }
}
bool testValsGetValueAcquired = false;
if (this.Session.ContainsKey("testValsGet"))
{
    this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsGet"]));
    testValsGetValueAcquired = true;
}
if ((testValsGetValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsGet");
    if ((data != null))
    {
        this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsInsertValueAcquired = false;
if (this.Session.ContainsKey("testValsInsert"))
{
    this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsInsert"]));
    testValsInsertValueAcquired = true;
}
if ((testValsInsertValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsInsert");
    if ((data != null))
    {
        this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsUpdateAfterValueAcquired = false;
if (this.Session.ContainsKey("testValsUpdateAfter"))
{
    this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsUpdateAfter"]));
    testValsUpdateAfterValueAcquired = true;
}
if ((testValsUpdateAfterValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsUpdateAfter");
    if ((data != null))
    {
        this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class TestControllerTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}

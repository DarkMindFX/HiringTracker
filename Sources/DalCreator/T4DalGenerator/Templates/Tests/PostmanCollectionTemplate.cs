// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace T4DalGenerator.Templates.Tests
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System.Web.Script.Serialization;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class PostmanCollectionTemplate : PostmanCollectionTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n{\r\n\t\"info\": {\r\n\t\t\"_postman_id\": \"BC1C4F03-F7A1-4A11-8F35-EDB40AD47891\",\r\n\t\t\"nam" +
                    "e\": \"PhotoPrint.API\",\r\n\t\t\"schema\": \"https://schema.getpostman.com/json/collectio" +
                    "n/v2.1.0/collection.json\"\r\n\t},\r\n\t\"item\": [\r\n\t\t\r\n\t");
            
            #line 23 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

		foreach(var table in tables)
		{

			var pks = generator.GetPKColumns(table);
			var idParamsList = string.Empty;
			foreach(var pk in pks)
			{
				idParamsList += ":" + pk.Name.ToLower() + (pk != pks.Last() ? "/" : string.Empty);
			}

			var dtoJson = "{\\r\\n";
			foreach(var c in table.Columns)
			{
				dtoJson += "  \\\"" + c.Name + "\\\": ";
				Type columnType = generator.GetColumnType(c);
				if(columnType == typeof(DateTime))
                {
					dtoJson += $"\\\"2021-10-01 21:35:00\\\"";
                }
                else if(columnType == typeof(string))
                {
					dtoJson += $"\\\"{c.Name} {Guid.NewGuid().ToString()}\\\"";
                }
                else if(columnType == typeof(bool))
                {
					dtoJson += "false";
                }
				else
				{
					dtoJson += "9999999";
				}
				dtoJson += c != table.Columns.Last() ? ",\\r\\n" : string.Empty;
                
			}
			dtoJson += "\\r\\n}";
		
	
            
            #line default
            #line hidden
            this.Write("\t\r\n\t{\r\n\t\t\t\"name\": \"");
            
            #line 62 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\"item\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"");
            
            #line 65 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" - Add\",\r\n\t\t\t\t\t\"request\": {\r\n\t\t\t\t\t\t\"method\": \"POST\",\r\n\t\t\t\t\t\t\"header\": [],\r\n\t\t\t\t\t\t" +
                    "\"body\": {\r\n\t\t\t\t\t\t\t\"mode\": \"raw\",\r\n\t\t\t\t\t\t\t\"raw\": \"");
            
            #line 71 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dtoJson));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"options\": {\r\n\t\t\t\t\t\t\t\t\"raw\": {\r\n\t\t\t\t\t\t\t\t\t\"language\": \"json\"\r\n\t\t\t\t\t\t\t\t}" +
                    "\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"url\": {\r\n\t\t\t\t\t\t\t\"raw\": \"http://localhost:8082/api/v" +
                    "1/");
            
            #line 79 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"protocol\": \"http\",\r\n\t\t\t\t\t\t\t\"host\": [\r\n\t\t\t\t\t\t\t\t\"localhost\"\r\n\t\t\t\t\t\t\t],\r" +
                    "\n\t\t\t\t\t\t\t\"port\": \"8082\",\r\n\t\t\t\t\t\t\t\"path\": [\r\n\t\t\t\t\t\t\t\t\"api\",\r\n\t\t\t\t\t\t\t\t\"v1\",\r\n\t\t\t\t\t\t" +
                    "\t\t\"");
            
            #line 88 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"response\": []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"" +
                    "");
            
            #line 95 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@" - Get All"",
					""request"": {
						""auth"": {
							""type"": ""bearer"",
							""bearer"": [
								{
									""key"": ""token"",
									""value"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMzMDAwMDY3IiwibmJmIjoxNjIyMzEwMDQ1LCJleHAiOjE2MjIzMTM2NDUsImlhdCI6MTYyMjMxMDA0NX0.2tvSqOpEYqOZ7VX0eVoUuaH3xY57-zKQil69oRWoabU"",
									""type"": ""string""
								}
							]
						},
						""method"": ""GET"",
						""header"": [],
						""url"": {
							""raw"": ""http://localhost:8082/api/v1/");
            
            #line 110 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"protocol\": \"http\",\r\n\t\t\t\t\t\t\t\"host\": [\r\n\t\t\t\t\t\t\t\t\"localhost\"\r\n\t\t\t\t\t\t\t],\r" +
                    "\n\t\t\t\t\t\t\t\"port\": \"8082\",\r\n\t\t\t\t\t\t\t\"path\": [\r\n\t\t\t\t\t\t\t\t\"api\",\r\n\t\t\t\t\t\t\t\t\"v1\",\r\n\t\t\t\t\t\t" +
                    "\t\t\"");
            
            #line 119 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"response\": []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"" +
                    "");
            
            #line 126 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@" - Update"",
					""request"": {
						""auth"": {
							""type"": ""bearer"",
							""bearer"": [
								{
									""key"": ""token"",
									""value"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMzMDAwMDY3IiwibmJmIjoxNjIyMzEwMDQ1LCJleHAiOjE2MjIzMTM2NDUsImlhdCI6MTYyMjMxMDA0NX0.2tvSqOpEYqOZ7VX0eVoUuaH3xY57-zKQil69oRWoabU"",
									""type"": ""string""
								}
							]
						},
						""method"": ""PUT"",
						""header"": [],
						""body"": {
							""mode"": ""raw"",
							""raw"": """);
            
            #line 142 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dtoJson));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"options\": {\r\n\t\t\t\t\t\t\t\t\"raw\": {\r\n\t\t\t\t\t\t\t\t\t\"language\": \"json\"\r\n\t\t\t\t\t\t\t\t}" +
                    "\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"url\": {\r\n\t\t\t\t\t\t\t\"raw\": \"http://localhost:8082/api/v" +
                    "1/");
            
            #line 150 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"protocol\": \"http\",\r\n\t\t\t\t\t\t\t\"host\": [\r\n\t\t\t\t\t\t\t\t\"localhost\"\r\n\t\t\t\t\t\t\t],\r" +
                    "\n\t\t\t\t\t\t\t\"port\": \"8082\",\r\n\t\t\t\t\t\t\t\"path\": [\r\n\t\t\t\t\t\t\t\t\"api\",\r\n\t\t\t\t\t\t\t\t\"v1\",\r\n\t\t\t\t\t\t" +
                    "\t\t\"");
            
            #line 159 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"response\": []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"" +
                    "");
            
            #line 166 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@" - Get By ID"",
					""request"": {
						""auth"": {
							""type"": ""bearer"",
							""bearer"": [
								{
									""key"": ""token"",
									""value"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMzMDAwMDY3IiwibmJmIjoxNjIyMzEwMDQ1LCJleHAiOjE2MjIzMTM2NDUsImlhdCI6MTYyMjMxMDA0NX0.2tvSqOpEYqOZ7VX0eVoUuaH3xY57-zKQil69oRWoabU"",
									""type"": ""string""
								}
							]
						},
						""method"": ""GET"",
						""header"": [],
						""url"": {
							""raw"": ""http://localhost:8082/api/v1/");
            
            #line 181 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 181 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(idParamsList));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"protocol\": \"http\",\r\n\t\t\t\t\t\t\t\"host\": [\r\n\t\t\t\t\t\t\t\t\"localhost\"\r\n\t\t\t\t\t\t\t],\r" +
                    "\n\t\t\t\t\t\t\t\"port\": \"8082\",\r\n\t\t\t\t\t\t\t\"path\": [\r\n\t\t\t\t\t\t\t\t\"api\",\r\n\t\t\t\t\t\t\t\t\"v1\",\r\n\t\t\t\t\t\t" +
                    "\t\t\"");
            
            #line 190 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n\t\t\t\t\t\t");
            
            #line 191 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

							if(pks.Count > 0)
							{
						
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t,\r\n\t\t\t\t\t\t");
            
            #line 196 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

								foreach(var pk in pks)
								{
						
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\":");
            
            #line 201 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 201 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk != pks.Last() ? "," : string.Empty));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t");
            
            #line 202 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

								}
							}
						
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"response\": []\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"");
            
            #line 212 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(@" - Delete"",
					""request"": {
						""auth"": {
							""type"": ""bearer"",
							""bearer"": [
								{
									""key"": ""token"",
									""value"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMzMDAwMDY3IiwibmJmIjoxNjIyMzEwMDQ1LCJleHAiOjE2MjIzMTM2NDUsImlhdCI6MTYyMjMxMDA0NX0.2tvSqOpEYqOZ7VX0eVoUuaH3xY57-zKQil69oRWoabU"",
									""type"": ""string""
								}
							]
						},
						""method"": ""DELETE"",
						""header"": [],
						""url"": {
							""raw"": ""http://localhost:8082/api/v1/");
            
            #line 227 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/");
            
            #line 227 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(idParamsList));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"protocol\": \"http\",\r\n\t\t\t\t\t\t\t\"host\": [\r\n\t\t\t\t\t\t\t\t\"localhost\"\r\n\t\t\t\t\t\t\t],\r" +
                    "\n\t\t\t\t\t\t\t\"port\": \"8082\",\r\n\t\t\t\t\t\t\t\"path\": [\r\n\t\t\t\t\t\t\t\t\"api\",\r\n\t\t\t\t\t\t\t\t\"v1\",\r\n\t\t\t\t\t\t" +
                    "\t\t\"");
            
            #line 236 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n\t\t\t\t\t\t");
            
            #line 237 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

							if(pks.Count > 0)
							{
						
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t,\r\n\t\t\t\t\t\t");
            
            #line 242 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

								foreach(var pk in pks)
								{
						
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\":");
            
            #line 247 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 247 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pk != pks.Last() ? "," : string.Empty));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t");
            
            #line 248 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

								}
							}
						
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"response\": []\r\n\t\t\t\t}\r\n\t\t");
            
            #line 257 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

        foreach(var c in table.Columns)
        {
            if(!string.IsNullOrEmpty(c.FKRefTable))
            {
        
            
            #line default
            #line hidden
            this.Write("\t\t\t,\r\n\t\t\t{\r\n\t\t\t\t\t\"name\": \"");
            
            #line 265 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name));
            
            #line default
            #line hidden
            this.Write(" - Get By ");
            
            #line 265 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name));
            
            #line default
            #line hidden
            this.Write(@""",
					""request"": {
						""auth"": {
							""type"": ""bearer"",
							""bearer"": [
								{
									""key"": ""token"",
									""value"": ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjMzMDAwMDY3IiwibmJmIjoxNjIyMzEwMDQ1LCJleHAiOjE2MjIzMTM2NDUsImlhdCI6MTYyMjMxMDA0NX0.2tvSqOpEYqOZ7VX0eVoUuaH3xY57-zKQil69oRWoabU"",
									""type"": ""string""
								}
							]
						},
						""method"": ""GET"",
						""header"": [],
						""url"": {
							""raw"": ""http://localhost:8082/api/v1/");
            
            #line 280 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("/by");
            
            #line 280 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("/:");
            
            #line 280 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\"protocol\": \"http\",\r\n\t\t\t\t\t\t\t\"host\": [\r\n\t\t\t\t\t\t\t\t\"localhost\"\r\n\t\t\t\t\t\t\t],\r" +
                    "\n\t\t\t\t\t\t\t\"port\": \"8082\",\r\n\t\t\t\t\t\t\t\"path\": [\r\n\t\t\t\t\t\t\t\t\"api\",\r\n\t\t\t\t\t\t\t\t\"v1\",\r\n\t\t\t\t\t\t" +
                    "\t\t\"");
            
            #line 289 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(modelHelper.Pluralize(table.Name).ToLower()));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\t\"by");
            
            #line 290 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("\",\r\n\t\t\t\t\t\t\t\t\":");
            
            #line 291 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("\"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"response\": []\r\n\t\t\t\t}\r\n\t\t");
            
            #line 298 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
	
			}
		}
		
            
            #line default
            #line hidden
            this.Write("\t\t\t]\r\n\t\t}");
            
            #line 303 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(table.Name != tables.Last().Name ? ",": string.Empty));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 304 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

		}
	
            
            #line default
            #line hidden
            this.Write("\t]\r\n\t\t\r\n}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\Projects\Test Projects\HiringTracker\Sources\DalCreator\T4DalGenerator\Templates\Tests\PostmanCollectionTemplate.tt"

private global::System.Collections.Generic.IList<DataModel.DataTable> _tablesField;

/// <summary>
/// Access the tables parameter of the template.
/// </summary>
private global::System.Collections.Generic.IList<DataModel.DataTable> tables
{
    get
    {
        return this._tablesField;
    }
}

private global::T4DalGenerator.ModelHelper _modelHelperField;

/// <summary>
/// Access the modelHelper parameter of the template.
/// </summary>
private global::T4DalGenerator.ModelHelper modelHelper
{
    get
    {
        return this._modelHelperField;
    }
}

private global::T4DalGenerator.Generators.GeneratorBase _generatorField;

/// <summary>
/// Access the generator parameter of the template.
/// </summary>
private global::T4DalGenerator.Generators.GeneratorBase generator
{
    get
    {
        return this._generatorField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsGetField;

/// <summary>
/// Access the testValsGet parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsGet
{
    get
    {
        return this._testValsGetField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsInsertField;

/// <summary>
/// Access the testValsInsert parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsInsert
{
    get
    {
        return this._testValsInsertField;
    }
}

private global::System.Collections.Generic.IDictionary<string,object> _testValsUpdateAfterField;

/// <summary>
/// Access the testValsUpdateAfter parameter of the template.
/// </summary>
private global::System.Collections.Generic.IDictionary<string,object> testValsUpdateAfter
{
    get
    {
        return this._testValsUpdateAfterField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool tablesValueAcquired = false;
if (this.Session.ContainsKey("tables"))
{
    this._tablesField = ((global::System.Collections.Generic.IList<DataModel.DataTable>)(this.Session["tables"]));
    tablesValueAcquired = true;
}
if ((tablesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("tables");
    if ((data != null))
    {
        this._tablesField = ((global::System.Collections.Generic.IList<DataModel.DataTable>)(data));
    }
}
bool modelHelperValueAcquired = false;
if (this.Session.ContainsKey("modelHelper"))
{
    this._modelHelperField = ((global::T4DalGenerator.ModelHelper)(this.Session["modelHelper"]));
    modelHelperValueAcquired = true;
}
if ((modelHelperValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("modelHelper");
    if ((data != null))
    {
        this._modelHelperField = ((global::T4DalGenerator.ModelHelper)(data));
    }
}
bool generatorValueAcquired = false;
if (this.Session.ContainsKey("generator"))
{
    this._generatorField = ((global::T4DalGenerator.Generators.GeneratorBase)(this.Session["generator"]));
    generatorValueAcquired = true;
}
if ((generatorValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("generator");
    if ((data != null))
    {
        this._generatorField = ((global::T4DalGenerator.Generators.GeneratorBase)(data));
    }
}
bool testValsGetValueAcquired = false;
if (this.Session.ContainsKey("testValsGet"))
{
    this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsGet"]));
    testValsGetValueAcquired = true;
}
if ((testValsGetValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsGet");
    if ((data != null))
    {
        this._testValsGetField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsInsertValueAcquired = false;
if (this.Session.ContainsKey("testValsInsert"))
{
    this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsInsert"]));
    testValsInsertValueAcquired = true;
}
if ((testValsInsertValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsInsert");
    if ((data != null))
    {
        this._testValsInsertField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}
bool testValsUpdateAfterValueAcquired = false;
if (this.Session.ContainsKey("testValsUpdateAfter"))
{
    this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(this.Session["testValsUpdateAfter"]));
    testValsUpdateAfterValueAcquired = true;
}
if ((testValsUpdateAfterValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("testValsUpdateAfter");
    if ((data != null))
    {
        this._testValsUpdateAfterField = ((global::System.Collections.Generic.IDictionary<string,object>)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class PostmanCollectionTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
